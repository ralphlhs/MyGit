using System.Collections;
using TMPro;
using UnityEngine;
using UnityEngine.UI;

public class TextCount : MonoBehaviour
{
    public Text text;
    //public TextMeshProUGUI textMeshPro;
    public int count;
    //텍스트에 카운트를 출력하는 기능을 구현.
    //카운트는 계속 1씩 증가하는 형태로 처리.
    void Start()
    {
        //코루틴 사용방법
        //StartCoroutine("함수의 이름");
        //1. 문자열을 통해 함수를 찾아서 실행하는 방식
        //->> 오타가 발생해도 오류가 발생하진 않음. 하지만 제대로 실행되지 않음.
        // StopCoroutine()을 통해 외부에서 중지하는 것이 가능합니다.

        //StopCoroutine(함수이름());
        //2. 해당 함수를 호출해 실행 결과를 반환받는 형태.
        // >> 오타발생시 오류 체크 가능.
        // StopCoroutine()을 통해 외부에서 중지하는 것이 불가능합니다.

        StartCoroutine("CountPlus");
        //해당 코루틴 중지 제어가능
        //StopCoroutine("CountPlus");



        //StartCoroutine(CountPlus());
        //함수 형태 실행 방식 
    }

    IEnumerator CountPlus()
    {
        while (true)
        {
            count++;
            text.text = count.ToString("N0");
            //N0은 숫자 3자리의 간격으로 ,를 표시하는 format입니다. 1,000같은.
            //yield return null;
            //다음 동작으로 넘어갑니다.
            yield return new WaitForSeconds(1);
        }

        /* Debug.Log("일시정지, 마이크 테스트");
         //yield return new WaitForSeconds(1);
         // yield는 일시적으로 CPU의 권한을 다른 함수에 위임하는 키워드입니다. 
         Debug.Log("밥만 먹고 올께.");
         yield return new WaitForSeconds(5);
         Debug.Log("일을 다시 시작해.");*/
    }
}
